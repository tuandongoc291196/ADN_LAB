# Predefined system roles
type Role @table {
  id: String! @col(name: "role_id")
  name: String! @unique
  description: String
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# User accounts keyed by Firebase Auth UID
type User @table {
  id: String!
  fullname: String!
  gender: String
  avatar: String
  email: String! @unique
  accountStatus: String! @default(value: "active")
  authProvider: String!
  phone: String
  address: String
  roleId: String! @default(value: "0")
  role: Role! @ref(fields: "roleId")
  createdAt: Timestamp! @default(expr: "request.time")
  lastLogin: Timestamp
}

type Staff @table {
  id: String! @col(name: "staff_id")
  user: User! @ref(fields: "id")
  hireDate: Date
  slot: Int! @default(value: 0)
  specification: [String] @default(value: [])
  certifications: [String] @default(value: [])
  positionId: String!
  position: Position! @ref(fields: "positionId")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type Position @table {
  id: String! @col(name: "position_id")
  name: String! @unique
  description: String
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# DNA testing services
type Service @table {
  id: String! @col(name: "service_id")
  title: String!
  description: String!
  fullDescription: String
  price: Float!
  duration: String!
  categoryId: String!
  category: ServiceCategory! @ref(fields: "categoryId")
  icon: String
  isActive: Boolean! @default(value: true)
  featured: Boolean! @default(value: false)
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type ServiceCategory @table {
  id: String! @col(name: "category_id")
  name: String! @unique
  description: String
  hasLegalValue: Boolean!
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type Method @table {
  id: String! @col(name: "method_id")
  name: String! @unique
  description: String
  price: Float!
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type ServiceMethod @table(key: ["serviceId", "methodId"]) {
  serviceId: String!
  service: Service! @ref(fields: "serviceId")
  methodId: String!
  method: Method! @ref(fields: "methodId")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# Appointment time slots
type TimeSlot @table {
  id: String! @col(name: "time_slot_id")
  slotDate: Date!
  startTime: String!
  endTime: String!
  currentBookings: Int! @default(value: 0)
  notes: String
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# Service bookings (merged with BookingItem)
type Booking @table {
  id: String! @col(name: "booking_id")
  userId: String!
  user: User! @ref(fields: "userId")
  staffId: String!
  staff: Staff! @ref(fields: "staffId")
  timeSlotId: String
  timeSlot: TimeSlot @ref(fields: "timeSlotId")
  serviceId: String!
  service: Service! @ref(fields: "serviceId")
  methodId: String!
  method: Method! @ref(fields: "methodId")
  totalAmount: Float!
  expiresAt: Timestamp
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type BookingHistory @table {
  id: String! @col(name: "booking_history_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  description: String!
  status: String! @default(value: "pending")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type Participant @table {
  id: String! @col(name: "participant_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  name: String!
  age: Int!
  identification: String
  gender: String!
  relationship: String
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

type Information @table {
  id: String! @col(name: "information_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  name: String!
  identification: String!
  address: String!
  phone: String!
  email: String
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# DNA samples collected from bookings
type Sample @table {
  id: String! @col(name: "sample_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  staffId: String
  staff: Staff @ref(fields: "staffId")
  participantId: String
  participant: Participant @ref(fields: "participantId")
  collectionDate: Date
  sampleQuality: String!
  sampleConcentration: Float
  notes: String
  sampleType: String
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# DNA test results
type TestResult @table {
  id: String! @col(name: "result_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  staffId: String!
  staff: Staff! @ref(fields: "staffId")
  managerId: String!
  manager: Staff! @ref(fields: "managerId")
  testMethod: String!
  positive: Boolean!
  accuracy: Float!
  testType: String!
  testDate: Date
  reportDate: Date
  resultData: String
  resultNotes: String
  status: String! @default(value: "pending")
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# Payment transactions
type Payment @table {
  id: String! @col(name: "payment_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  amount: Float!
  paymentMethod: String!
  status: String! @default(value: "pending")
  paymentDate: Date
  refundDetail: String
  otherDetails: [String] @default(value: [])
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# User feedback and ratings
type Feedback @table {
  id: String! @col(name: "feedback_id")
  bookingId: String!
  booking: Booking! @ref(fields: "bookingId")
  rating: Int!
  comment: String
  createdAt: Timestamp! @default(expr: "request.time")
}

# Blog posts and articles
type Blog @table {
  id: String! @col(name: "blog_id")
  userId: String!
  user: User! @ref(fields: "userId")
  title: String!
  content: String!
  imageUrl: String
  isActive: Boolean! @default(value: true)
  createdAt: Timestamp! @default(expr: "request.time")
  updatedAt: Timestamp
}

# System notifications
type Notification @table {
  id: String! @col(name: "notification_id")
  userId: String
  user: User @ref(fields: "userId")
  staffId: String
  staff: Staff @ref(fields: "staffId")
  title: String!
  message: String!
  isRead: Boolean! @default(value: false)
  type: String! @default(value: "general")
  createdAt: Timestamp! @default(expr: "request.time")
}